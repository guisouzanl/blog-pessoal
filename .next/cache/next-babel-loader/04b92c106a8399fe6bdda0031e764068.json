{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useContext, useState } from 'react';\nimport { Container, PostList, PostItem, PostItemText, PostArticle, PostImageContainer } from './styles';\nimport postContext from '../postContext';\nimport filterContext from '../filterContext';\nimport AsideMenu from '../AsideMenu/index';\n\nconst Posts = () => {\n  const {\n    allPosts\n  } = useContext(postContext);\n  const {\n    filter\n  } = useContext(filterContext);\n  const {\n    0: posts,\n    1: setPost\n  } = useState(allPosts);\n\n  const handleClick = () => {\n    const teste = allPosts.sort((a, b) => b.metadata.publishedAt - a.metadata.publishedAt).map(teste => teste = teste);\n    setPost([...teste]);\n    console.log(teste);\n  };\n\n  return __jsx(Container, null, __jsx(PostList, null, filter === '' ? posts.map(post => __jsx(PostItem, {\n    key: post.title\n  }, __jsx(PostArticle, null, __jsx(PostImageContainer, null, __jsx(\"img\", {\n    src: \"../../images/posts/post7.png\",\n    alt: \"Post 2\"\n  })), __jsx(PostItemText, null, __jsx(\"h2\", null, post.title), __jsx(\"p\", null, post.body), __jsx(\"small\", null, post.name), __jsx(\"button\", {\n    onClick: handleClick\n  }))))) : posts.filter(obj => obj.name === filter).map(post => __jsx(PostItem, {\n    key: post.title\n  }, __jsx(PostArticle, null, __jsx(PostImageContainer, null, __jsx(\"img\", {\n    src: \"../../images/posts/post7.png\",\n    alt: \"Post 2\"\n  })), __jsx(PostItemText, null, __jsx(\"h2\", null, post.title), __jsx(\"p\", null, post.body), __jsx(\"small\", null, post.name), __jsx(\"button\", {\n    onClick: handleClick\n  })))))), __jsx(AsideMenu, null));\n};\n\nexport default Posts;","map":{"version":3,"sources":["/home/guisouzanl/Projetos/blog-pessoal/components/Posts/index.js"],"names":["React","useContext","useState","Container","PostList","PostItem","PostItemText","PostArticle","PostImageContainer","postContext","filterContext","AsideMenu","Posts","allPosts","filter","posts","setPost","handleClick","teste","sort","a","b","metadata","publishedAt","map","console","log","post","title","body","name","obj"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SACEC,SADF,EAEEC,QAFF,EAGEC,QAHF,EAIEC,YAJF,EAKEC,WALF,EAMEC,kBANF,QAOO,UAPP;AAQA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAOC,SAAP,MAAsB,oBAAtB;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAM;AAAEC,IAAAA;AAAF,MAAeZ,UAAU,CAACQ,WAAD,CAA/B;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAab,UAAU,CAACS,aAAD,CAA7B;AAEA,QAAM;AAAA,OAACK,KAAD;AAAA,OAAQC;AAAR,MAAmBd,QAAQ,CAACW,QAAD,CAAjC;;AAEA,QAAMI,WAAW,GAAG,MAAM;AACxB,UAAMC,KAAK,GAAGL,QAAQ,CACnBM,IADW,CACN,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACC,QAAF,CAAWC,WAAX,GAAyBH,CAAC,CAACE,QAAF,CAAWC,WADxC,EAEXC,GAFW,CAEPN,KAAK,IAAKA,KAAK,GAAGA,KAFX,CAAd;AAIAF,IAAAA,OAAO,CAAC,CAAC,GAAGE,KAAJ,CAAD,CAAP;AAEAO,IAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACD,GARD;;AAUA,SACE,MAAC,SAAD,QACE,MAAC,QAAD,QACGJ,MAAM,KAAK,EAAX,GACGC,KAAK,CAACS,GAAN,CAAUG,IAAI,IACZ,MAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,IAAI,CAACC;AAApB,KACE,MAAC,WAAD,QACE,MAAC,kBAAD,QACE;AAAK,IAAA,GAAG,EAAC,8BAAT;AAAwC,IAAA,GAAG,EAAC;AAA5C,IADF,CADF,EAIE,MAAC,YAAD,QACE,kBAAKD,IAAI,CAACC,KAAV,CADF,EAEE,iBAAID,IAAI,CAACE,IAAT,CAFF,EAGE,qBAAQF,IAAI,CAACG,IAAb,CAHF,EAIE;AAAQ,IAAA,OAAO,EAAEb;AAAjB,IAJF,CAJF,CADF,CADF,CADH,GAgBGF,KAAK,CACFD,MADH,CACUiB,GAAG,IAAIA,GAAG,CAACD,IAAJ,KAAahB,MAD9B,EAEGU,GAFH,CAEOG,IAAI,IACP,MAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,IAAI,CAACC;AAApB,KACE,MAAC,WAAD,QACE,MAAC,kBAAD,QACE;AAAK,IAAA,GAAG,EAAC,8BAAT;AAAwC,IAAA,GAAG,EAAC;AAA5C,IADF,CADF,EAIE,MAAC,YAAD,QACE,kBAAKD,IAAI,CAACC,KAAV,CADF,EAEE,iBAAID,IAAI,CAACE,IAAT,CAFF,EAGE,qBAAQF,IAAI,CAACG,IAAb,CAHF,EAIE;AAAQ,IAAA,OAAO,EAAEb;AAAjB,IAJF,CAJF,CADF,CAHJ,CAjBN,CADF,EAoCE,MAAC,SAAD,OApCF,CADF;AAwCD,CAxDD;;AA0DA,eAAeL,KAAf","sourcesContent":["import React, { useContext, useState } from 'react';\nimport {\n  Container,\n  PostList,\n  PostItem,\n  PostItemText,\n  PostArticle,\n  PostImageContainer,\n} from './styles';\nimport postContext from '../postContext';\nimport filterContext from '../filterContext';\nimport AsideMenu from '../AsideMenu/index';\n\nconst Posts = () => {\n  const { allPosts } = useContext(postContext);\n  const { filter } = useContext(filterContext);\n\n  const [posts, setPost] = useState(allPosts);\n\n  const handleClick = () => {\n    const teste = allPosts\n      .sort((a, b) => b.metadata.publishedAt - a.metadata.publishedAt)\n      .map(teste => (teste = teste));\n\n    setPost([...teste]);\n\n    console.log(teste);\n  };\n\n  return (\n    <Container>\n      <PostList>\n        {filter === ''\n          ? posts.map(post => (\n              <PostItem key={post.title}>\n                <PostArticle>\n                  <PostImageContainer>\n                    <img src=\"../../images/posts/post7.png\" alt=\"Post 2\" />\n                  </PostImageContainer>\n                  <PostItemText>\n                    <h2>{post.title}</h2>\n                    <p>{post.body}</p>\n                    <small>{post.name}</small>\n                    <button onClick={handleClick} />\n                  </PostItemText>\n                </PostArticle>\n              </PostItem>\n            ))\n          : posts\n              .filter(obj => obj.name === filter)\n              .map(post => (\n                <PostItem key={post.title}>\n                  <PostArticle>\n                    <PostImageContainer>\n                      <img src=\"../../images/posts/post7.png\" alt=\"Post 2\" />\n                    </PostImageContainer>\n                    <PostItemText>\n                      <h2>{post.title}</h2>\n                      <p>{post.body}</p>\n                      <small>{post.name}</small>\n                      <button onClick={handleClick} />\n                    </PostItemText>\n                  </PostArticle>\n                </PostItem>\n              ))}\n      </PostList>\n      <AsideMenu />\n    </Container>\n  );\n};\n\nexport default Posts;\n"]},"metadata":{},"sourceType":"module"}