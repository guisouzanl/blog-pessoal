{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport App from 'next/app';\nimport axios from 'axios';\nimport GlobalStyle from '../styles/global';\nimport postContext from '../components/postContext';\nexport default class MyApp extends App {\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    let pageProps = {};\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n      return {\n        pageProps\n      };\n    }\n\n    const postsResponse = await axios.get('http://www.mocky.io/v2/5be5e3fa2f000082000fc3f8');\n    const authorResponse = await axios.get('http://www.mocky.io/v2/5be5e3ae2f00005b000fc3f6');\n    const posts = postsResponse.data.map(a => Object.assign(a, authorResponse.data.find(b => b.id === a.metadata.authorId)));\n    const authors = posts.map(a => a.name);\n    const authors2 = authors.filter((li, idx, self) => self.map(itm => iem.Grade + itm.domain).indexOf(li.Grade + li.domain) === idx);\n    console.log(authors);\n    return {\n      pageProps,\n      posts,\n      authors\n    };\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      posts,\n      authors\n    } = this.props;\n    return __jsx(React.Fragment, null, __jsx(GlobalStyle, null), __jsx(postContext.Provider, {\n      value: {\n        posts,\n        authors\n      }\n    }, __jsx(Component, pageProps)));\n  }\n\n}","map":{"version":3,"sources":["/home/guisouzanl/Projetos/blog-pessoal/pages/_app.js"],"names":["React","App","axios","GlobalStyle","postContext","MyApp","getInitialProps","Component","ctx","pageProps","postsResponse","get","authorResponse","posts","data","map","a","Object","assign","find","b","id","metadata","authorId","authors","name","authors2","filter","li","idx","self","itm","iem","Grade","domain","indexOf","console","log","render","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AAEA,eAAe,MAAMC,KAAN,SAAoBJ,GAApB,CAAwB;AACrC,eAAaK,eAAb,CAA6B;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAA7B,EAAiD;AAC/C,QAAIC,SAAS,GAAG,EAAhB;;AAEA,QAAIF,SAAS,CAACD,eAAd,EAA+B;AAC7BG,MAAAA,SAAS,GAAG,MAAMF,SAAS,CAACD,eAAV,CAA0BE,GAA1B,CAAlB;AAEA,aAAO;AAAEC,QAAAA;AAAF,OAAP;AACD;;AAED,UAAMC,aAAa,GAAG,MAAMR,KAAK,CAACS,GAAN,CAC1B,iDAD0B,CAA5B;AAGA,UAAMC,cAAc,GAAG,MAAMV,KAAK,CAACS,GAAN,CAC3B,iDAD2B,CAA7B;AAIA,UAAME,KAAK,GAAGH,aAAa,CAACI,IAAd,CAAmBC,GAAnB,CAAuBC,CAAC,IACpCC,MAAM,CAACC,MAAP,CACEF,CADF,EAEEJ,cAAc,CAACE,IAAf,CAAoBK,IAApB,CAAyBC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASL,CAAC,CAACM,QAAF,CAAWC,QAAlD,CAFF,CADY,CAAd;AAOA,UAAMC,OAAO,GAAGX,KAAK,CAACE,GAAN,CAAUC,CAAC,IAAIA,CAAC,CAACS,IAAjB,CAAhB;AAEA,UAAMC,QAAQ,GAAGF,OAAO,CAACG,MAAR,CACf,CAACC,EAAD,EAAKC,GAAL,EAAUC,IAAV,KACEA,IAAI,CACDf,GADH,CACOgB,GAAG,IAAIC,GAAG,CAACC,KAAJ,GAAYF,GAAG,CAACG,MAD9B,EAEGC,OAFH,CAEWP,EAAE,CAACK,KAAH,GAAWL,EAAE,CAACM,MAFzB,MAEqCL,GAJxB,CAAjB;AAMAO,IAAAA,OAAO,CAACC,GAAR,CAAYb,OAAZ;AAEA,WAAO;AAAEf,MAAAA,SAAF;AAAaI,MAAAA,KAAb;AAAoBW,MAAAA;AAApB,KAAP;AACD;;AAEDc,EAAAA,MAAM,GAAG;AACP,UAAM;AAAE/B,MAAAA,SAAF;AAAaE,MAAAA,SAAb;AAAwBI,MAAAA,KAAxB;AAA+BW,MAAAA;AAA/B,QAA2C,KAAKe,KAAtD;AAEA,WACE,4BACE,MAAC,WAAD,OADF,EAEE,MAAC,WAAD,CAAa,QAAb;AACE,MAAA,KAAK,EAAE;AACL1B,QAAAA,KADK;AAELW,QAAAA;AAFK;AADT,OAME,MAAC,SAAD,EAAef,SAAf,CANF,CAFF,CADF;AAaD;;AArDoC","sourcesContent":["import React from 'react';\nimport App from 'next/app';\nimport axios from 'axios';\nimport GlobalStyle from '../styles/global';\nimport postContext from '../components/postContext';\n\nexport default class MyApp extends App {\n  static async getInitialProps({ Component, ctx }) {\n    let pageProps = {};\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n\n      return { pageProps };\n    }\n\n    const postsResponse = await axios.get(\n      'http://www.mocky.io/v2/5be5e3fa2f000082000fc3f8'\n    );\n    const authorResponse = await axios.get(\n      'http://www.mocky.io/v2/5be5e3ae2f00005b000fc3f6'\n    );\n\n    const posts = postsResponse.data.map(a =>\n      Object.assign(\n        a,\n        authorResponse.data.find(b => b.id === a.metadata.authorId)\n      )\n    );\n\n    const authors = posts.map(a => a.name);\n\n    const authors2 = authors.filter(\n      (li, idx, self) =>\n        self\n          .map(itm => iem.Grade + itm.domain)\n          .indexOf(li.Grade + li.domain) === idx\n    );\n    console.log(authors);\n\n    return { pageProps, posts, authors };\n  }\n\n  render() {\n    const { Component, pageProps, posts, authors } = this.props;\n\n    return (\n      <>\n        <GlobalStyle />\n        <postContext.Provider\n          value={{\n            posts,\n            authors,\n          }}\n        >\n          <Component {...pageProps} />\n        </postContext.Provider>\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}