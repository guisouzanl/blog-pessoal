{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useContext, useState } from 'react';\nimport { Container, PostList, PostItem, PostItemText, PostArticle, PostImageContainer, ArrowDown } from './styles';\nimport postContext from '../postContext';\nimport filterContext from '../filterContext';\nimport AsideMenu from '../AsideMenu/index';\n\nconst Posts = () => {\n  const {\n    allPosts\n  } = useContext(postContext);\n  const {\n    filter\n  } = useContext(filterContext);\n  const {\n    0: posts,\n    1: setPost\n  } = useState(allPosts);\n\n  const handleClick = () => {\n    const sortedByDate = allPosts.sort((a, b) => b.metadata.publishedAt - a.metadata.publishedAt);\n    setPost([...sortedByDate]);\n  };\n\n  return __jsx(Container, null, __jsx(PostList, null, __jsx(ArrowDown, {\n    onClick: handleClick\n  }), filter === '' ? posts.map(post => __jsx(PostItem, {\n    key: post.title\n  }, __jsx(PostArticle, null, __jsx(PostImageContainer, null, __jsx(\"img\", {\n    src: \"../../images/posts/post7.png\",\n    alt: \"Post 2\"\n  })), __jsx(PostItemText, null, __jsx(\"h2\", null, __jsx(Link, {\n    href: \"/\"\n  }, __jsx(\"a\", {\n    role: \"button\",\n    tabIndex: 0,\n    onClick: () => setSinglePost(lastPost)\n  }, post.title))), __jsx(\"p\", null, post.body), __jsx(\"small\", null, post.name))))) : posts.filter(obj => obj.name.includes(filter) || obj.title.includes(filter) || obj.body.includes(filter)).map(post => __jsx(PostItem, {\n    key: post.title\n  }, __jsx(PostArticle, null, __jsx(PostImageContainer, null, __jsx(\"img\", {\n    src: \"../../images/posts/post7.png\",\n    alt: \"Post 2\"\n  })), __jsx(PostItemText, null, __jsx(\"h2\", null, post.title), __jsx(\"p\", null, post.body), __jsx(\"small\", null, post.name), __jsx(\"button\", {\n    onClick: handleClick\n  })))))), __jsx(AsideMenu, null));\n};\n\nexport default Posts;","map":{"version":3,"sources":["/home/guisouzanl/Projetos/blog-pessoal/components/Posts/index.js"],"names":["React","useContext","useState","Container","PostList","PostItem","PostItemText","PostArticle","PostImageContainer","ArrowDown","postContext","filterContext","AsideMenu","Posts","allPosts","filter","posts","setPost","handleClick","sortedByDate","sort","a","b","metadata","publishedAt","map","post","title","setSinglePost","lastPost","body","name","obj","includes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SACEC,SADF,EAEEC,QAFF,EAGEC,QAHF,EAIEC,YAJF,EAKEC,WALF,EAMEC,kBANF,EAOEC,SAPF,QAQO,UARP;AASA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAOC,SAAP,MAAsB,oBAAtB;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAM;AAAEC,IAAAA;AAAF,MAAeb,UAAU,CAACS,WAAD,CAA/B;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAad,UAAU,CAACU,aAAD,CAA7B;AAEA,QAAM;AAAA,OAACK,KAAD;AAAA,OAAQC;AAAR,MAAmBf,QAAQ,CAACY,QAAD,CAAjC;;AAEA,QAAMI,WAAW,GAAG,MAAM;AACxB,UAAMC,YAAY,GAAGL,QAAQ,CAACM,IAAT,CACnB,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACC,QAAF,CAAWC,WAAX,GAAyBH,CAAC,CAACE,QAAF,CAAWC,WAD3B,CAArB;AAIAP,IAAAA,OAAO,CAAC,CAAC,GAAGE,YAAJ,CAAD,CAAP;AACD,GAND;;AAQA,SACE,MAAC,SAAD,QACE,MAAC,QAAD,QACE,MAAC,SAAD;AAAW,IAAA,OAAO,EAAED;AAApB,IADF,EAEGH,MAAM,KAAK,EAAX,GACGC,KAAK,CAACS,GAAN,CAAUC,IAAI,IACZ,MAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,IAAI,CAACC;AAApB,KACE,MAAC,WAAD,QACE,MAAC,kBAAD,QACE;AAAK,IAAA,GAAG,EAAC,8BAAT;AAAwC,IAAA,GAAG,EAAC;AAA5C,IADF,CADF,EAIE,MAAC,YAAD,QACE,kBACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC;AAAX,KACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,QAAQ,EAAE,CAFZ;AAGE,IAAA,OAAO,EAAE,MAAMC,aAAa,CAACC,QAAD;AAH9B,KAKGH,IAAI,CAACC,KALR,CADF,CADF,CADF,EAYE,iBAAID,IAAI,CAACI,IAAT,CAZF,EAaE,qBAAQJ,IAAI,CAACK,IAAb,CAbF,CAJF,CADF,CADF,CADH,GAyBGf,KAAK,CACFD,MADH,CAEIiB,GAAG,IACDA,GAAG,CAACD,IAAJ,CAASE,QAAT,CAAkBlB,MAAlB,KACAiB,GAAG,CAACL,KAAJ,CAAUM,QAAV,CAAmBlB,MAAnB,CADA,IAEAiB,GAAG,CAACF,IAAJ,CAASG,QAAT,CAAkBlB,MAAlB,CALN,EAOGU,GAPH,CAOOC,IAAI,IACP,MAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,IAAI,CAACC;AAApB,KACE,MAAC,WAAD,QACE,MAAC,kBAAD,QACE;AAAK,IAAA,GAAG,EAAC,8BAAT;AAAwC,IAAA,GAAG,EAAC;AAA5C,IADF,CADF,EAIE,MAAC,YAAD,QACE,kBAAKD,IAAI,CAACC,KAAV,CADF,EAEE,iBAAID,IAAI,CAACI,IAAT,CAFF,EAGE,qBAAQJ,IAAI,CAACK,IAAb,CAHF,EAIE;AAAQ,IAAA,OAAO,EAAEb;AAAjB,IAJF,CAJF,CADF,CARJ,CA3BN,CADF,EAmDE,MAAC,SAAD,OAnDF,CADF;AAuDD,CArED;;AAuEA,eAAeL,KAAf","sourcesContent":["import React, { useContext, useState } from 'react';\nimport {\n  Container,\n  PostList,\n  PostItem,\n  PostItemText,\n  PostArticle,\n  PostImageContainer,\n  ArrowDown,\n} from './styles';\nimport postContext from '../postContext';\nimport filterContext from '../filterContext';\nimport AsideMenu from '../AsideMenu/index';\n\nconst Posts = () => {\n  const { allPosts } = useContext(postContext);\n  const { filter } = useContext(filterContext);\n\n  const [posts, setPost] = useState(allPosts);\n\n  const handleClick = () => {\n    const sortedByDate = allPosts.sort(\n      (a, b) => b.metadata.publishedAt - a.metadata.publishedAt\n    );\n\n    setPost([...sortedByDate]);\n  };\n\n  return (\n    <Container>\n      <PostList>\n        <ArrowDown onClick={handleClick} />\n        {filter === ''\n          ? posts.map(post => (\n              <PostItem key={post.title}>\n                <PostArticle>\n                  <PostImageContainer>\n                    <img src=\"../../images/posts/post7.png\" alt=\"Post 2\" />\n                  </PostImageContainer>\n                  <PostItemText>\n                    <h2>\n                      <Link href=\"/\">\n                        <a\n                          role=\"button\"\n                          tabIndex={0}\n                          onClick={() => setSinglePost(lastPost)}\n                        >\n                          {post.title}\n                        </a>\n                      </Link>\n                    </h2>\n                    <p>{post.body}</p>\n                    <small>{post.name}</small>\n                  </PostItemText>\n                </PostArticle>\n              </PostItem>\n            ))\n          : posts\n              .filter(\n                obj =>\n                  obj.name.includes(filter) ||\n                  obj.title.includes(filter) ||\n                  obj.body.includes(filter)\n              )\n              .map(post => (\n                <PostItem key={post.title}>\n                  <PostArticle>\n                    <PostImageContainer>\n                      <img src=\"../../images/posts/post7.png\" alt=\"Post 2\" />\n                    </PostImageContainer>\n                    <PostItemText>\n                      <h2>{post.title}</h2>\n                      <p>{post.body}</p>\n                      <small>{post.name}</small>\n                      <button onClick={handleClick} />\n                    </PostItemText>\n                  </PostArticle>\n                </PostItem>\n              ))}\n      </PostList>\n      <AsideMenu />\n    </Container>\n  );\n};\n\nexport default Posts;\n"]},"metadata":{},"sourceType":"module"}