{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\n\n/* eslint-disable react/prop-types */\nimport React, { Component } from 'react';\nimport { loadGetInitialProps } from 'next/dist/next-server/lib/utils';\nimport axios from 'axios';\nexport default (function () {\n  return function (Composed) {\n    return (\n      /*#__PURE__*/\n      function (_Component) {\n        _inherits(_class, _Component);\n\n        function _class() {\n          _classCallCheck(this, _class);\n\n          return _possibleConstructorReturn(this, _getPrototypeOf(_class).apply(this, arguments));\n        }\n\n        _createClass(_class, [{\n          key: \"componentDidMount\",\n          value: function componentDidMount() {\n            ReactGA.initialize('id do analytics');\n            ReactGA.pageview(window.location.pathname);\n          }\n        }, {\n          key: \"render\",\n          value: function render() {\n            var pageProps = this.props.pageProps;\n            return __jsx(Composed, pageProps);\n          }\n        }], [{\n          key: \"getInitialProps\",\n          value: function getInitialProps(ctx) {\n            var pageProps;\n            return _regeneratorRuntime.async(function getInitialProps$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    pageProps = {};\n\n                    if (!Composed.getInitialProps) {\n                      _context.next = 5;\n                      break;\n                    }\n\n                    _context.next = 4;\n                    return _regeneratorRuntime.awrap(loadGetInitialProps(Composed, ctx));\n\n                  case 4:\n                    pageProps = _context.sent;\n\n                  case 5:\n                    return _context.abrupt(\"return\", {\n                      pageProps: pageProps\n                    });\n\n                  case 6:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            });\n          }\n        }]);\n\n        return _class;\n      }(Component)\n    );\n  };\n});","map":{"version":3,"sources":["/home/guisouzanl/Projetos/blog-pessoal/src/hocs/withPosts.js"],"names":["React","Component","loadGetInitialProps","axios","Composed","ReactGA","initialize","pageview","window","location","pathname","pageProps","props","ctx","getInitialProps"],"mappings":";;;;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,mBAAT,QAAoC,iCAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,gBAAe;AAAA,SAAM,UAAAC,QAAQ;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,8CAWL;AAClBC,YAAAA,OAAO,CAACC,UAAR,CAAmB,iBAAnB;AACAD,YAAAA,OAAO,CAACE,QAAR,CAAiBC,MAAM,CAACC,QAAP,CAAgBC,QAAjC;AACD;AAdwB;AAAA;AAAA,mCAgBhB;AAAA,gBACCC,SADD,GACe,KAAKC,KADpB,CACCD,SADD;AAGP,mBAAO,MAAC,QAAD,EAAcA,SAAd,CAAP;AACD;AApBwB;AAAA;AAAA,0CAEIE,GAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAGnBF,oBAAAA,SAHmB,GAGP,EAHO;;AAAA,yBAKnBP,QAAQ,CAACU,eALU;AAAA;AAAA;AAAA;;AAAA;AAAA,qDAMHZ,mBAAmB,CAACE,QAAD,EAAWS,GAAX,CANhB;;AAAA;AAMrBF,oBAAAA,SANqB;;AAAA;AAAA,qDAQhB;AAAEA,sBAAAA,SAAS,EAATA;AAAF,qBARgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,QACbV,SADa;AAAA;AAAA,GAAd;AAAA,CAAf","sourcesContent":["/* eslint-disable react/prop-types */\nimport React, { Component } from 'react';\nimport { loadGetInitialProps } from 'next/dist/next-server/lib/utils';\nimport axios from 'axios';\n\nexport default () => Composed =>\n  class extends Component {\n    static async getInitialProps(ctx) {\n      let pageProps = {};\n\n      if (Composed.getInitialProps) {\n        pageProps = await loadGetInitialProps(Composed, ctx);\n      }\n      return { pageProps };\n    }\n\n    componentDidMount() {\n      ReactGA.initialize('id do analytics');\n      ReactGA.pageview(window.location.pathname);\n    }\n\n    render() {\n      const { pageProps } = this.props;\n\n      return <Composed {...pageProps} />;\n    }\n  };\n"]},"metadata":{},"sourceType":"module"}